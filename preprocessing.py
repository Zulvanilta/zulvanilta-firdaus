# -*- coding: utf-8 -*-
"""Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nGzP9HR6ixmOskchDZNySSRJmJqm-YAp
"""

#  Memuat data dari file CSV
import pandas as pd
#  Memuat data dari file CSV ke dalam DataFrame
df = pd.read_csv('movie_sample_dataset.csv')

# Menampilkan beberapa baris pertama dari DataFrame untuk verifikasi
df.head()

# Periksa informasi umum tentang dataset, termasuk tipe data dan nilai yang hilang.
df.info()
df.isnull().sum()
df['color'].value_counts() # call value_counts() on the seraies

# Hapus baris yang memiliki nilai NaN di kolom 'gross' dan 'budget'
df_cleaned = df.dropna(subset=["gross"], axis=0, inplace=True)
df_cleaned = df.dropna(subset=["budget"], axis=0, inplace=True)

# Periksa kembali jumlah nilai yang hilang
df_cleaned = df.reset_index(drop=True)
df_cleaned.isnull().sum()
df

# Atasi nilai yang tidak konsisten atau kesalahan penulisan di kolom, seperti perbedaan antara "Color" dan "color". Ubah semua nilai di kolom 'color'menjadi huruf kecil
df['color'] = df['color'].str.lower()

# Periksa kembali nilai unik di kolom 'color'
print(df['color'].unique())

# prompt: Ubah atau hapus nilai-nilai yang tidak standar, seperti nilai negatif atau "N/A".

# Mengganti nilai negatif di kolom 'budget' dan 'gross' dengan NaN
df.loc[df['budget'] < 0, 'budget'] = float('nan')
df.loc[df['gross'] < 0, 'gross'] = float('nan')

# Menghapus baris dengan nilai NaN di kolom 'budget' dan 'gross'
df.dropna(subset=['budget', 'gross'], inplace=True)

# Me-reset index setelah menghapus baris
df.reset_index(drop=True, inplace=True)

# Menampilkan beberapa baris pertama dari DataFrame yang telah dibersihkan
df.head()

# Melihat type data
df.dtypes
#Ubah tipe data kolom menjadi tipe data yang sesuai (misalnya, konversi budget dan gross menjadi numerik).
df["gross"] = df["gross"].astype(int)
df["budget"] = df["budget"].astype(int)
df.dtypes

# Memisahkan genre yang digabungkan menjadi beberapa kolom terpisah
df['genres'] = df['genres'].str.split('|')
df = df.explode('genres')

# Menampilkan beberapa baris pertama dari DataFrame yang telah dipisahkan
df.head()

# prompt: normalisasi teks untuk memastikan konsistensi

# Import library yang dibutuhkan
import re

# Fungsi untuk normalisasi teks
def normalize_text(text):
  """
  Fungsi untuk normalisasi teks dengan mengubah teks menjadi huruf kecil,
  menghapus karakter khusus, dan menghilangkan spasi berlebih.

  Args:
    text: Teks yang akan dinormalisasi.

  Returns:
    Teks yang telah dinormalisasi.
  """
  if isinstance(text, str):  # Periksa apakah input adalah string
    text = text.lower()  # Ubah teks menjadi huruf kecil
    text = re.sub(r'[^\w\s]', '', text)  # Hapus karakter khusus
    text = re.sub(r'\s+', ' ', text).strip()  # Hapus spasi berlebih
    return text
  else:
    return text

# Contoh penerapan normalisasi teks pada kolom 'plot_keywords'
df['director_name'] = df['director_name'].apply(normalize_text)
df['genres'] = df['genres'].apply(normalize_text)
df['movie_title'] = df['movie_title'].apply(normalize_text)
df['language'] = df['language'].apply(normalize_text)
df['actors'] = df['actors'].apply(normalize_text)
# Menampilkan beberapa baris pertama dari DataFrame dengan kolom yang telah dinormalisasi
df.head()

# Simpan data yang telah diproses ke dalam file CSV baru dengan nama movie_dataset_cleaned.csv.
df.to_csv('movie_dataset_cleaned1.csv', index=False)